# -------------------------------
# MapProxy example configuration.
# -------------------------------
#
# This is a minimal MapProxy configuration.
# See full_example.yaml and the documentation for more options.
#

# Starts the following services:
# Demo:
#     http://localhost:8080/demo
# WMS:
#     capabilities: http://localhost:8080/service?REQUEST=GetCapabilities
# WMTS:
#     capabilities: http://localhost:8080/wmts/1.0.0/WMTSCapabilities.xml
#     first tile: http://localhost:8080/wmts/osm/webmercator/0/0/0.png
# Tile service (compatible with OSM/etc.)
#     first tile: http://localhost:8080/tiles/osm/webmercator/0/0/0.png
# TMS:
#     note: TMS is not compatible with OSM/Google Maps/etc.
#     fist tile: http://localhost:8080/tms/1.0.0/osm/webmercator/0/0/0.png
# KML:
#     initial doc: http://localhost:8080/kml/osm/webmercator

base: [layers.yaml, caches.yaml, sources.yaml]

services:
  demo:
#  tms:
#    use_grid_names: true
    # origin for /tiles service
#    origin: 'nw'
#  kml:
#      use_grid_names: true
# wmts:
  wms:
    srs: ['EPSG:4326']
    md:
      title: MapProxy WMS Proxy
      abstract: SISGIDE.
    attribution:
      text: 'SisGeoDef'      


grids:
  webmercator:
    base: GLOBAL_WEBMERCATOR
  geodetic:
    base: GLOBAL_GEODETIC


  # image/transformation options
  image:
    # use best resampling for vector data
    resampling_method: bicubic # nearest/bilinear
    # stretch cached images by this factor before
    # using the next level
    stretch_factor: 1.15
    # shrink cached images up to this factor before
    # returning an empty image (for the first level)
    max_shrink_factor: 4.0

    # Enable 24bit PNG images. Defaults to true (8bit PNG)
    paletted: false
    formats:
      custom_format:
        format: image/png
        # the custom format will be stored as 8bit PNG
        mode: P
        colors: 32
        transparent: true
        encoding_options:
        # The algorithm used to quantize (reduce) the image colors
          quantizer: fastoctree
      # edit an existing format
      image/jpeg:
        encoding_options:
          # jpeg quality [0-100]
          jpeg_quality: 60


globals:
